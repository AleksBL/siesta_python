#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct  5 17:42:51 2023

@author: aleksander
"""
from siesta_python.siesta_python import SiP
import sisl
import sys
import os
import numpy as np
args = sys.argv[1:]
print('make_contour Program Start')
print('Writes a TranSIESTA contour to a numpy array')
print('')
print('sys.argv:', sys.argv)
print('')
options = {'E1':'-41.0',
           #'E2':'0.0',
           'N_C': '52',
           'N_F': '11' ,
           'fact':'-10',
           'kT': '26.2',
           'name': 'mycontour',
           'pp_path':'../pp'
           }
if '--help' in args:
    print('You can specify these variables (no spaces allowed): ')
    for k in options.keys():
        print(k, ' = ', options[k])
    exit()
for a in args:
    split = a.replace(' ', '').split('=')
    options.update({split[0]:split[1]})
path       = args[0].replace(' ', '').split('=')[1]
os.chdir(path)
new_folder = os.getcwd()
sys.path.append(new_folder)
g  = sisl.geom.graphene(orthogonal = True)
ty = 7
em = g.tile(2,0).copy()
ep = g.tile(2,0).move(g.cell[0] * (ty-2))
d  = g.tile(ty,0)
EM = SiP(em.cell, em.xyz, em.atoms.Z, basis='SZ',mpi = '',
         semi_inf = '-a1', sl = 'EM', directory_name='tmpEM', 
         kp=[3,3,1], pp_path=options['pp_path'])
EP = SiP(ep.cell, ep.xyz, ep.atoms.Z, basis='SZ',mpi='', kp = [3,3,1],
         semi_inf = '+a1', sl = 'EP', directory_name='tmpEP',
         pp_path=options['pp_path'])
C1 = {'V1': options['E1'] + ' eV',
      'V2': options['fact'],# + ' eV',
      'Np_1': options['N_C'],
      'Np_2': options['N_F'],
     }
D = SiP(d.cell, d.xyz, d.atoms.Z, basis = 'SZ',mpi='',
        elecs = [EM, EP], directory_name='tmpDev' , kp = [1,3,1],
        Chem_Pot = [.0, .0], solution_method='transiesta',dm_tol='1e-2', 
        electronic_temperature_mev=float(options['kT']),
        contour_settings=[C1,C1], pp_path=options['pp_path']
        )
D.find_elec_inds()
EM.fdf(); EM.run_siesta_electrode_in_dir()
EP.fdf(); EP.run_siesta_electrode_in_dir()
# print('Hehehe')
D.fdf(); D.write_more_fdf(['TS.SCF.dQ.Converge False'], name='TS_TBT')
D.run_siesta_electrode_in_dir()
CW  = np.genfromtxt('tmpDev/siesta.TSCCEQ-x', )
np.save(options['name']+'.npy', CW)
os.system('rm -rf tmpEM')
os.system('rm -rf tmpEP')
os.system('rm -rf tmpDev')

# #N_F = int(options['N_F'])
print('TranSIESTA Contour written to file: '+options['name']+'.npy')

# exit()
#print(CW[-N_F:])
# poles = (2*np.arange(N_F-1) + 1) * float(options['kT']) /1000* np.pi
#print(CW[-N_F+1:,1])
#print(poles)
# import matplotlib.pyplot as plt
# from matplotlib.patches import Ellipse
# from matplotlib.collections import PatchCollection
# bot     = float(options['E1'])
# bot2    = float(options['kT'])/1000 * abs(float(options['fact']))
# fig, ax = plt.subplots()
# patches = []
# circle  = Ellipse((bot/2, 0), abs(bot), 2*CW[:,1].max())
# patches.append(circle)
# p       = PatchCollection(patches, alpha=0.4)
# ax.scatter(CW[:,0], CW[:,1])
# P2 = CW[CW[:,0]<bot/2]
# ax.add_collection(p)
# plt.axis('equal')
# ax.scatter(-(P2[:,0]-bot), P2[:,1])
# plt.show()
# print(CW)#os.system('rm -rf tmpDev')
# print(2*np.pi*float(options['kT'])/1000 )
